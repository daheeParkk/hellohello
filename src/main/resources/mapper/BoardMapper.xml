<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.repository.BoardMapper">

    <resultMap id="boardResultMap" type="org.example.domain.Board">
        <id column="id" property="id" />
        <result column="title" property="title" />
        <result column="content" property="content" />
        <association property="user" column="user_id" javaType="org.example.domain.User">
            <id column="userId" property="id" />
            <result column="nickname" property="nickname" />
        </association>
        <association property="category" column="category_id" javaType="org.example.domain.Category">
            <id column="id" property="id" />
            <result column="category" property="content" />
        </association>
        <collection column="id" property="comments" javaType="java.util.ArrayList" ofType="org.example.domain.Comment" select="selectCommentBoard">
            <id column="id" property="id" />
            <result column="nickname" property="nickname"/>
        </collection>
    </resultMap>

    <select id="selectBoardList" resultMap="boardResultMap">
        SELECT b.id, u.id AS userId, u.nickname, b.title, b.content, c.content as category, h.content as hashtag
        FROM board b left outer join user u on b.user_id = u.id
                     left outer join category c on b.category_id = c.id
                     left outer join board_hashtag bh on b.id = bh.board_id
                     left outer join hashtag h on h.id = bh.hashtag_id;
    </select>

    <select id="selectBoard" resultMap="boardResultMap">
        select b.id, u.id AS userId, u.nickname, b.title, b.content, c.content as category, h.content as hashtag
        FROM board b left outer join user u on b.user_id = u.id
                     left outer join category c on b.category_id = c.id
                     left outer join board_hashtag bh on b.id = bh.board_id
                     left outer join hashtag h on h.id = bh.hashtag_id
        WHERE b.id = #{id}
    </select>

    <select id="selectCommentBoard" resultType="org.example.domain.Comment">
        SELECT u.nickname, u.id AS userId, c.id, c.content
        FROM comment c LEFT OUTER JOIN user u on c.user_id = u.id
        WHERE c.board_id = #{id}
    </select>

    <insert id="createBoard" parameterType="org.example.domain.Board">
        INSERT INTO board
            (title, content, user_id, category_id)
        VALUES (#{title}, #{content}, #{userId}, #{categoryId});
    </insert>

    <update id="updateBoard" parameterType="org.example.domain.Board">
        UPDATE board set
            title = #{title},
            content = #{content},
            user_id = #{userId},
            category_id = #{categoryId}
        where id = #{id}
    </update>

    <delete id="deleteBoard" parameterType="java.lang.Long">
        DELETE from board
        where id = #{id}
    </delete>

    <select id="boardWriter" resultMap="boardResultMap" parameterType="java.lang.Long">
        select
            B.user_id,
            A.nickname ,
            B.title ,
            B.content,
            M.content,
            C.content,
            H.content,
        from board B left outer join user A on B.user_id = A.id left outer join category C on B.category_id = C.id left outer join comment M on B.id = M.boardId;
        where B.id = #{id};
    </select>

</mapper>
