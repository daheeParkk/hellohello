<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.repository.UserMapper">

    <resultMap id="userResultMap" type="org.example.domain.User">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="nickname" property="nickname" />
        <result column="password" property="password" />
        <result column="email" property="email" />
        <result column="number" property="number" />
    </resultMap>

    <select id="selectUserByNickname" resultMap="userResultMap">
        SELECT id, nickname, password
        FROM user
        WHERE nickname = #{nickname}
    </select>

    <select id="selectNicknameByNickname" resultType="int">
        SELECT count(nickname)
        FROM user
        WHERE nickname = #{nickname}
    </select>

    <select id="selectUserList" resultMap="userResultMap">
        SELECT *
        FROM user
    </select>

    <select id="selectUser" parameterType="java.lang.Long" resultMap="userResultMap">
        SELECT *
        FROM user
        WHERE id = #{id}
    </select>

    <insert id="createUser" parameterType="org.example.domain.User">
        INSERT INTO user
            (name, nickname, password, email, number)
        VALUES (#{name},#{nickname},#{password},#{email},#{number});
    </insert>

    <update id="updateUser" parameterType="org.example.domain.User">
        UPDATE user set
                        name = #{name},
                        nickname = #{nickname},
                        password = #{password},
                        email = #{email},
                        number = #{number}
        where id = #{id}
    </update>

    <delete id="deleteUser" parameterType="java.lang.Long">
        DELETE from user
        where id = #{id}
    </delete>

</mapper>
